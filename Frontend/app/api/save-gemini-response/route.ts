import { NextRequest, NextResponse } from 'next/server';
import { writeFile, mkdir } from 'fs/promises';
import { join } from 'path';

export async function POST(request: NextRequest) {
  try {
    const { filename, content, championName, timestamp } = await request.json();

    // Create gemini-responses directory if it doesn't exist
    const responsesDir = join(process.cwd(), 'gemini-responses');
    await mkdir(responsesDir, { recursive: true });

    // Create the file content with metadata
    const fileContent = `# Gemini AI Analysis for ${championName}
Generated: ${timestamp}

## Strategic Analysis

${content}

---
*This analysis was generated by Gemini AI for League of Legends strategic improvement.*
`;

    // Save the file
    const filePath = join(responsesDir, filename);
    await writeFile(filePath, fileContent, 'utf-8');

    return NextResponse.json({ 
      success: true, 
      message: 'Gemini response saved successfully',
      filename: filename,
      path: filePath
    });
  } catch (error) {
    console.error('Error saving Gemini response:', error);
    return NextResponse.json(
      { 
        success: false, 
        error: 'Failed to save Gemini response' 
      },
      { status: 500 }
    );
  }
}
